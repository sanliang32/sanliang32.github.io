<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SQL语法</title>
      <link href="/undefined/e272e39a.html"/>
      <url>/undefined/e272e39a.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、DDL（数据定义语言）"><a href="#一、DDL（数据定义语言）" class="headerlink" title="一、DDL（数据定义语言）"></a>一、DDL（数据定义语言）</h2><p>1~8 操作数据库</p><h3 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1.创建数据库"></a>1.创建数据库</h3><ul><li>create database 数据库名；</li><li>create database 数据库名 character set 字符集；</li></ul><h3 id="2-切换数据库"><a href="#2-切换数据库" class="headerlink" title="2.切换数据库"></a>2.切换数据库</h3><ul><li>use 数据库名；</li></ul><h3 id="3-查看当前使用的数据库"><a href="#3-查看当前使用的数据库" class="headerlink" title="3.查看当前使用的数据库"></a>3.查看当前使用的数据库</h3><ul><li>select database（）；</li></ul><h3 id="4-查看mysql全部数据库"><a href="#4-查看mysql全部数据库" class="headerlink" title="4.查看mysql全部数据库"></a>4.查看mysql全部数据库</h3><ul><li>show database；</li></ul><h3 id="5-查看数据库定义信息"><a href="#5-查看数据库定义信息" class="headerlink" title="5.查看数据库定义信息"></a>5.查看数据库定义信息</h3><ul><li>show create database 数据库名；</li></ul><h3 id="6-修改数据库字符集"><a href="#6-修改数据库字符集" class="headerlink" title="6. 修改数据库字符集"></a>6. 修改数据库字符集</h3><ul><li>alter database 数据库名 character set 字符集；</li></ul><h3 id="7-删除数据库"><a href="#7-删除数据库" class="headerlink" title="7. 删除数据库"></a>7. 删除数据库</h3><ul><li>drop database 数据库名；</li></ul><h3 id="8-创建表"><a href="#8-创建表" class="headerlink" title="8.创建表"></a>8.创建表</h3><ul><li>create table 表名（<br>  字段名称1 字段类型（长度），<br>  字段名称2 字段类型<br>）；</li><li>crate table 新表名 like 旧表名； 复制表结构</li></ul><h3 id="9-查看表结构"><a href="#9-查看表结构" class="headerlink" title="9. 查看表结构"></a>9. 查看表结构</h3><ul><li>desc 表名；</li></ul><h3 id="10-查看当前数据库中有那些数据表"><a href="#10-查看当前数据库中有那些数据表" class="headerlink" title="10.查看当前数据库中有那些数据表"></a>10.查看当前数据库中有那些数据表</h3><ul><li>show table；</li></ul><h3 id="11-查看表的建表语句"><a href="#11-查看表的建表语句" class="headerlink" title="11.查看表的建表语句"></a>11.查看表的建表语句</h3><ul><li>show create table 表名；</li></ul><h3 id="12-删除数据表"><a href="#12-删除数据表" class="headerlink" title="12.删除数据表"></a>12.删除数据表</h3><ul><li>drop table 表名；</li><li>drop table if exists 表名； 判断表是否存在再删除</li></ul><h3 id="13-修改表名"><a href="#13-修改表名" class="headerlink" title="13.修改表名"></a>13.修改表名</h3><ul><li>rename table 旧表名 to 新表名；</li></ul><h3 id="14-添加列"><a href="#14-添加列" class="headerlink" title="14.添加列"></a>14.添加列</h3><ul><li>alter table 表名 add 字段名 类型长度；</li></ul><h3 id="15-修改列的字段类型"><a href="#15-修改列的字段类型" class="headerlink" title="15.修改列的字段类型"></a>15.修改列的字段类型</h3><ul><li>alter table 表名 modify 字段名 类型长度；</li></ul><h3 id="16-修改列名称"><a href="#16-修改列名称" class="headerlink" title="16.修改列名称"></a>16.修改列名称</h3><ul><li>alter table 表名 change 旧字段名 新字段名 新字段类型；</li></ul><h3 id="17-删除列"><a href="#17-删除列" class="headerlink" title="17.删除列"></a>17.删除列</h3><ul><li>alter table 表名 drop 列名；</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>创建：create、查看：show、选择：select、切换：use</li><li>修改表句式：alter table 表名 操作方式 列名等（add、modify、change、drop）</li></ul><h2 id="二、DML（数据操纵语言）"><a href="#二、DML（数据操纵语言）" class="headerlink" title="二、DML（数据操纵语言）"></a>二、DML（数据操纵语言）</h2><h3 id="1-插入数据"><a href="#1-插入数据" class="headerlink" title="1.插入数据"></a>1.插入数据</h3><ul><li>insert into 表名 （字段1，字段2…) values(字段值1，字段值2…）</li></ul><h3 id="2-修改数据"><a href="#2-修改数据" class="headerlink" title="2.修改数据"></a>2.修改数据</h3><ul><li>update 表名 set 修改的值 where 条件<ul><li>不写where是 全部修改</li></ul></li></ul><h3 id="3-删除数据"><a href="#3-删除数据" class="headerlink" title="3.删除数据"></a>3.删除数据</h3><ul><li>delete from 表名 [where 字段名 &#x3D; 值]<ul><li>不写中括号里的那就删除全部数据</li></ul></li><li>truncate table 表名<ul><li>删除表，创建一个结构一样的新表</li></ul></li></ul><h2 id="三、DQL（数据查询语言）"><a href="#三、DQL（数据查询语言）" class="headerlink" title="三、DQL（数据查询语言）"></a>三、DQL（数据查询语言）</h2><h3 id="1-简单查询"><a href="#1-简单查询" class="headerlink" title="1.简单查询"></a>1.简单查询</h3><ul><li>select 列名 from 表名；<ul><li>在列名后加as 可以定别名</li><li>代替列名，是全部列</li></ul></li><li>select distinct 列名 from 表名； 查询去重</li><li>select 列名 from 表名 where 条件表达式； 条件查询</li></ul><h3 id="2-核心查询"><a href="#2-核心查询" class="headerlink" title="2.核心查询"></a>2.核心查询</h3><ul><li>select 字段名 from 表名 order by 字段名【asc、desc】，字段名【asc、desc】；查询并且排序</li><li>聚合函数<ul><li>语法：select 聚合函数（列名） from 表名；</li><li>count：值不为NULL的记录计数</li><li>sum：求和</li><li>max：最大值</li><li>min：最小值</li><li>avg：平均数</li></ul></li><li>分组<ul><li>select 字段名&#x2F;聚合函数 from 表名 group by 分组字段 having 分组条件；</li></ul></li><li>限制返回数量 （mysql独有）<ul><li>select 字段名 from 表名 limit 偏移量，显示量；</li></ul></li><li>约束<ul><li>主键约束：primary key<ul><li>主键自增：在后面加 auto_increment</li></ul></li><li>非空约束：not_null</li><li>唯一约束：unique</li></ul></li><li>默认值<ul><li>default “默认值”；</li></ul></li><li>外键约束<ul><li>指向另一个表的主键</li><li>constraint 外键约束名称 foreign key 外键字段名 references 主表主键</li><li>删除外键<ul><li>alter table 从表 drop foreign key 外键约束名称</li></ul></li><li>添加外键<ul><li>alter table 从表 add constraint 外键约束名称 foreign key 外键字段名 references 主表主键</li></ul></li></ul></li></ul><h3 id="3-多表查询"><a href="#3-多表查询" class="headerlink" title="3.多表查询"></a>3.多表查询</h3><ul><li>笛卡尔积方式<ul><li>select 字段名 from 表1，表2；</li></ul></li><li>笛卡尔积 + where条件（隐式内连接）<ul><li>select 字段名 from 表1，表2 where id相等；</li></ul></li><li>显示内连接<ul><li>select 字段名 from 左表 join 右表 on 条件；</li></ul></li><li>左外连接<ul><li>select 字段名 from 左表 left join 右表 on 条件；</li></ul></li><li>右外连接<ul><li>select 字段名 from 左表 right join 右表 on 条件；</li></ul></li><li>合并查询<ul><li>select…… union select……; (结果合并并删除重复)</li><li>select…… union all select……; (不删除重复数据)</li></ul></li><li>子查询<ul><li>一个select结果作为另一select的一部分；需要（）括起来。</li></ul></li></ul><h2 id="四、DCL（数据控制语言）"><a href="#四、DCL（数据控制语言）" class="headerlink" title="四、DCL（数据控制语言）"></a>四、DCL（数据控制语言）</h2><h2 id="五、其他"><a href="#五、其他" class="headerlink" title="五、其他"></a>五、其他</h2><h3 id="1-注释"><a href="#1-注释" class="headerlink" title="1.注释"></a>1.注释</h3><p># 一行注释<br>– 一行注释<br>&#x2F;* 多行注释多行*&#x2F;</p><h3 id="2-常用数据类型"><a href="#2-常用数据类型" class="headerlink" title="2.常用数据类型"></a>2.常用数据类型</h3><p>int 整型<br>dauble 浮点型<br>varchar 字符串型<br>date 日期类型<br>char 固定字符串长度</p>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML标记语言</title>
      <link href="/undefined/b3e1ff37.html"/>
      <url>/undefined/b3e1ff37.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、基础篇"><a href="#一、基础篇" class="headerlink" title="一、基础篇"></a>一、基础篇</h2><h3 id="1-基础示例"><a href="#1-基础示例" class="headerlink" title="1. 基础示例"></a>1. 基础示例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>文档标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    文档内容......</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-基础结构"><a href="#2-基础结构" class="headerlink" title="2.基础结构"></a>2.基础结构</h3><ul><li>html文档分为文本+标记，通过显示标记语言对文本进行修饰，然后表达渲染后的文本内容</li><li>一个网页由声明+head+body三部分组成<ul><li>声明文档使用HTML5语法</li><li>head 部分在页面中不显示</li><li>body 部分为显示在页面中的内容</li></ul></li></ul><hr><h2 id="二、常用标签"><a href="#二、常用标签" class="headerlink" title="二、常用标签"></a>二、常用标签</h2><h3 id="1-文本标签"><a href="#1-文本标签" class="headerlink" title="1. 文本标签"></a>1. 文本标签</h3><ul><li><code>&lt;hn&gt;...&lt;/hn&gt;</code> n为1-6的数字。标记为标题，加粗独立行。</li><li><code>&lt;i&gt;...&lt;/i&gt;</code> 斜体</li><li><code>&lt;em&gt;...&lt;/em&gt;</code> 强调斜体</li><li><code>&lt;b&gt;...&lt;/b&gt;</code> 加粗</li><li><code>&lt;strong&gt;...&lt;/strong&gt;</code> 强调加粗，方便搜索引擎收录</li><li><code>&lt;cite&gt;...&lt;/cite&gt;</code> 作品标题（引用）</li><li><code>&lt;sub&gt;...&lt;/sub&gt;</code> 下标</li><li><code>&lt;sup&gt;...&lt;/sup&gt;</code> 上标</li><li><code>&lt;del&gt;...&lt;/del&gt;</code> 删除线</li></ul><h3 id="2-格式化标签"><a href="#2-格式化标签" class="headerlink" title="2. 格式化标签"></a>2. 格式化标签</h3><ul><li><code>&lt;br/&gt;</code> 换行</li><li><code>&lt;p&gt;...&lt;/p&gt;</code> 换段</li><li><code>&lt;hr/&gt;</code> 水平分割线</li><li>列表<ul><li><code>&lt;ul&gt;...&lt;/ul&gt;</code> 无序列表</li><li><code>&lt;ol&gt;...&lt;/ol&gt;</code> 有序列表，其中type的值：代表起始值。</li><li><code>&lt;li&gt;...&lt;/li&gt;</code> 列表项，在每一个列表中使用</li><li><code>&lt;dl&gt;...&lt;/dl&gt;</code> 自定义列表</li><li><code>&lt;dt&gt;...&lt;/dt&gt;</code> 自定义列表头</li><li><code>&lt;dd&gt;...&lt;/dd&gt;</code> 自定义列表内容，会缩进</li><li><code>&lt;div&gt;...&lt;/div&gt;</code> 常用于组合块元素（高度为0，宽度填满），通过CSS对这些元素进行格式化</li><li><code>&lt;span&gt;...&lt;/span&gt;</code> 常用于包含的文本（没有特殊效果），可以使用CSS对他进行格式化，或通过JavaScript对他进行操作</li></ul></li></ul><h3 id="3-图片标签"><a href="#3-图片标签" class="headerlink" title="3. 图片标签"></a>3. 图片标签</h3><ul><li>&#x2F; 在网页中插入一张图片</li><li>属性：<ul><li>src：图片引用地址，图片名及url地址。（可以使用相对地址，或者网络地址）</li><li>alt：图片加载失败时的提示信息</li><li>title：文字提示的属性。（把鼠标放在图片上时提示的文字）</li><li>width：图片宽度</li><li>height：图片高度（通常高度和宽度只使用一个，否则容易失真）</li><li>border：边框线粗细（颜色与字体颜色相同，通常不用）</li></ul></li></ul><h3 id="4-超级链接标签"><a href="#4-超级链接标签" class="headerlink" title="4. 超级链接标签"></a>4. 超级链接标签</h3><ul><li><code>&lt;a href=&quot;&quot;&gt;...&lt;/a&gt;</code> 网页中插入超级链接</li><li>属性：<ul><li>href：必填项，指链接跳转地址</li><li>target：表示链接的打开方式</li><li>_blank 新窗口</li><li>_parent 父窗口</li><li>_self 本窗口（默认）</li><li>_top 顶级窗口</li><li>framename 窗口名</li><li>title：文字提示属性（详情）</li></ul></li><li>锚点链接：<ul><li><code>&lt;a id=&quot;a1&quot;&gt;</code> 通过id来定义一个锚点，以前用name</li><li><code>&lt;a href=&quot;#a1&quot;&gt;</code> 跳转a1处<code>&lt;a&gt;</code> 也可以在#前加入其他页面链接</li></ul></li></ul><h3 id="5-表格标签"><a href="#5-表格标签" class="headerlink" title="5. 表格标签"></a>5. 表格标签</h3><ul><li><code>&lt;table&gt;...&lt;\table&gt;</code> 表格标签</li><li>属性：<ul><li>border 表格线，0是没有</li><li>width 表格宽度</li><li>cellspacing 单元格之间的距离，默认是2，0时没有缝隙</li><li>cellpadding 单元格的字于四边保持的最小距离，默认是0</li></ul></li><li><code>&lt;capion&gt;...&lt;/capion&gt;</code> 表格标题</li><li><code>&lt;tr&gt;...&lt;/tr&gt;</code> 行标签</li><li><code>&lt;th&gt;...&lt;/th&gt;</code> 列头标签</li><li><code>&lt;td&gt;...&lt;/td&gt;</code> 列标签</li><li>属性：<ul><li>rowapan 跨行</li><li>colspan 跨列</li></ul></li><li><code>&lt;thead&gt;...&lt;/thead&gt;</code> 表头</li><li><code>&lt;tbody&gt;...&lt;/tbody&gt;</code> 表体</li><li><code>&lt;tfoot&gt;...&lt;/tfoot&gt;</code> 表尾</li></ul><h3 id="6-表单标签"><a href="#6-表单标签" class="headerlink" title="6. 表单标签**"></a>6. 表单标签**</h3><ul><li><code>&lt;form&gt;...&lt;/form&gt;</code> 表单标签</li><li>属性：<ul><li>action 目标地址，就是当提交表单时，提交到的地址。</li><li>method 发送方式，分为get（以明文的方式提交），post（以隐藏的方式提交）</li></ul></li><li><code>&lt;input/&gt;</code> 表单项标签，通过不同type创建不同表单项</li><li>属性：<ul><li>type 表单项类型</li><li>text 文本</li><li>password 密码</li><li>radio 单选</li><li>checkbox 复选</li><li>submit 提交</li><li>reset 重置</li><li>button 按钮，没有效果，可以添加事件</li><li>file 上传文件</li><li>image 图片</li><li>email 邮箱</li><li>number 下拉选择数字</li><li>url 网址</li><li>date 日历</li><li>color 颜色</li><li>name 变量名字，实现互相排斥需要相同的name</li><li>value 默认值</li><li>disabled 默认不能修改</li><li>checked 默认选中，针对单选和多选使用</li><li>min 最小值</li><li>max 最大值</li><li>maxlength 长度</li></ul></li><li><code>&lt;select&gt;</code> 文本选项<ul><li><code>&lt;/option&gt;...&lt;option&gt;</code> 每一项使用此标记，selected为默认选此项</li></ul></li><li><code>&lt;datalist&gt;...&lt;/datalist&gt;</code> 可选的下拉列表</li><li><code>&lt;/option&gt;...&lt;option&gt;</code> 每一项使用此标记，selected为默认选此项</li><li><code>&lt;textarea&gt;...&lt;/textarea&gt;</code> 多行文本输入</li><li><code>&lt;button&gt;...&lt;/botton&gt;</code> 标签自定义按钮</li></ul><h3 id="7-行内框架标签"><a href="#7-行内框架标签" class="headerlink" title="7. 行内框架标签"></a>7. 行内框架标签</h3><ul><li><code>&lt;iframe&gt;...&lt;/iframe&gt;</code> 在网页放另一个网页</li><li>属性：<ul><li>src：规定在iframe中显示的url</li><li>name：规定iframe的名称</li><li>height：高度</li><li>width：宽度</li><li>frameborder：是否显示边框</li></ul></li></ul><h3 id="8-多媒体标签"><a href="#8-多媒体标签" class="headerlink" title="8. 多媒体标签"></a>8. 多媒体标签</h3><ul><li><code>&lt;audio&gt;...&lt;autio&gt;</code> 音频标签</li><li>属性：<ul><li>src:音频引用的地址</li><li>controls，是否显示控制</li></ul></li><li><code>&lt;video&gt;...&lt;video&gt;</code> 视频标签</li><li>属性：<ul><li>src:视频引用的地址</li><li>controls，是否显示控制</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VBA-常用代码</title>
      <link href="/undefined/3965e9e6.html"/>
      <url>/undefined/3965e9e6.html</url>
      
        <content type="html"><![CDATA[<h2 id="常用短句"><a href="#常用短句" class="headerlink" title="常用短句"></a>常用短句</h2><h3 id="活动工作表最后一行"><a href="#活动工作表最后一行" class="headerlink" title="活动工作表最后一行"></a>活动工作表最后一行</h3><ul><li>常用情况<blockquote><p>m &#x3D; range(“a65536”).end(xlup).row</p></blockquote></li><li>最大下限<blockquote><p>m &#x3D; range(“a” &amp; rows.count).end(xlup).row</p></blockquote></li></ul><hr><h3 id="屏幕闪烁"><a href="#屏幕闪烁" class="headerlink" title="屏幕闪烁"></a>屏幕闪烁</h3><ul><li>关闭<blockquote><p>Application.ScreenUpdating &#x3D; False</p></blockquote></li><li>打开<blockquote><p>Application.ScreenUpdating &#x3D; True</p></blockquote></li></ul><hr><h3 id="警告提示"><a href="#警告提示" class="headerlink" title="警告提示"></a>警告提示</h3><ul><li>关闭<blockquote><p>Application.DisplayAlerts &#x3D; False</p></blockquote></li><li>打开<blockquote><p>Application.DisplayAlerts &#x3D; True</p></blockquote></li></ul><hr><h3 id="工作表隐藏"><a href="#工作表隐藏" class="headerlink" title="工作表隐藏"></a>工作表隐藏</h3><ul><li>深度隐藏<blockquote><p>Sheet5.Visible &#x3D; xlSheetVeryHidden</p></blockquote></li><li>普通隐藏<blockquote><p>Sheet5.Visible &#x3D; false</p></blockquote></li><li>取消隐藏<blockquote><p>Sheet5.Visible &#x3D; True</p></blockquote></li></ul><hr><h3 id="审阅密码"><a href="#审阅密码" class="headerlink" title="审阅密码"></a>审阅密码</h3><ul><li>加密<blockquote><p>Sheets(“sheet1”).Protect (“123456”)</p></blockquote></li><li>解密<blockquote><p>Sheets(“sheet1”).Unprotect (“123456”)</p></blockquote></li></ul><hr><h3 id="透视表刷新"><a href="#透视表刷新" class="headerlink" title="透视表刷新"></a>透视表刷新</h3><blockquote><p>Sheet1.PivotTables(“数据透视表1”).PivotCache.Refresh</p></blockquote><hr><h3 id="指定单元格添加批注"><a href="#指定单元格添加批注" class="headerlink" title="指定单元格添加批注"></a>指定单元格添加批注</h3><blockquote><p>Sheet1.Cells(1, 1).AddComment Text:&#x3D;”批注内容”</p></blockquote><hr><h3 id="定点执行"><a href="#定点执行" class="headerlink" title="定点执行"></a>定点执行</h3><blockquote><p>Application.OnTime TimeValue(“04:00:00”), “MySub”</p></blockquote><hr><h3 id="选择文件窗口"><a href="#选择文件窗口" class="headerlink" title="选择文件窗口"></a>选择文件窗口</h3><blockquote><p>Filename &#x3D; Application.GetOpenFilename(“Excel文件（*.xlsm &amp; <em>.xlam &amp; <em>.xlt）,</em>.xlsm;</em>.xlam;*.xlt”, , “VBA破解”)</p></blockquote><hr><h2 id="功能性模块"><a href="#功能性模块" class="headerlink" title="功能性模块"></a>功能性模块</h2><h3 id="遍历文件夹全部工作簿的全部工作表"><a href="#遍历文件夹全部工作簿的全部工作表" class="headerlink" title="遍历文件夹全部工作簿的全部工作表"></a>遍历文件夹全部工作簿的全部工作表</h3><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">mypath = ThisWorkbook.Path &amp; <span class="string">&quot;\123\&quot;</span>　　　　<span class="comment">&#x27;确定文件路径&#x27;</span></span><br><span class="line">myfile = Dir(mypath &amp; <span class="string">&quot;*.xls&quot;</span>)　　　　<span class="comment">&#x27;确定指定路径&#x27;</span></span><br><span class="line"><span class="keyword">Do</span> <span class="keyword">While</span> myfile &lt;&gt; <span class="string">&quot;&quot;</span>　　　　<span class="comment">&#x27;遍历文件夹&#x27;</span></span><br><span class="line">　　<span class="keyword">If</span> myfile &lt;&gt; ThisWorkbook.Name <span class="keyword">Then</span></span><br><span class="line">　　　　<span class="keyword">Set</span> ak = Workbooks.Open(mypath &amp; myfile)　　　　<span class="comment">&#x27;按照顺序打开文件&#x27;</span></span><br><span class="line">　　<span class="keyword">Else</span></span><br><span class="line">　　　　<span class="keyword">GoTo</span> tiaozhuan　　　　<span class="comment">&#x27;遍历结束跳转至末尾&#x27;</span></span><br><span class="line">　　<span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">　　<span class="keyword">For</span> i = <span class="number">1</span> <span class="keyword">To</span> ActiveWorkbook.Worksheets.Count　　　　<span class="comment">&#x27;遍历打开的工作簿中所有工作表&#x27;</span></span><br><span class="line">　　　　<span class="keyword">With</span> ak.Worksheets(i)　　　　<span class="comment">&#x27;对单一表的操作&#x27;</span></span><br><span class="line">　　　　　　nm = ak.Name</span><br><span class="line">　　　　　　nm2 = .Name</span><br><span class="line">　　　　　　n = .Range(<span class="string">&quot;a65536&quot;</span>).<span class="keyword">End</span>(xlUp).Row</span><br><span class="line">　　　　　　pp = .Range(<span class="string">&quot;a2:s&quot;</span> &amp; n)</span><br><span class="line">　　　　　　n = n - <span class="number">1</span></span><br><span class="line">　　　　　　Sheet1.Range(<span class="string">&quot;a&quot;</span> &amp; m + <span class="number">1</span> &amp; <span class="string">&quot;:s&quot;</span> &amp; m + n) = pp</span><br><span class="line">　　　　　　Sheet1.Range(<span class="string">&quot;t&quot;</span> &amp; m + <span class="number">1</span> &amp; <span class="string">&quot;:t&quot;</span> &amp; m + n) = nm &amp; nm2</span><br><span class="line">　　　　　　m = m + n</span><br><span class="line">　　　　<span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">　　<span class="keyword">Next</span> i</span><br><span class="line"></span><br><span class="line">　　ak.Close　　　　<span class="comment">&#x27;关闭工作簿&#x27;</span></span><br><span class="line">　　myfile = Dir　　　　<span class="comment">&#x27;选择下一个工作簿&#x27;</span></span><br><span class="line"><span class="keyword">Loop</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">tiaozhuan:</span>　　　　<span class="comment">&#x27;结束Do循环标签&#x27;</span></span><br></pre></td></tr></table></figure><hr><h3 id="outlook邮件一键发送"><a href="#outlook邮件一键发送" class="headerlink" title="outlook邮件一键发送"></a>outlook邮件一键发送</h3><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#x27;新建邮件项目</span></span><br><span class="line"><span class="keyword">Set</span> OLApp = CreateObject(<span class="string">&quot;Outlook.application&quot;</span>)</span><br><span class="line"><span class="keyword">Set</span> OLMail = OLApp.CreateItem(<span class="number">0</span>)</span><br><span class="line">OLApp.Session.Logon</span><br><span class="line"><span class="comment">&#x27;发送邮件</span></span><br><span class="line">na = ThisWorkbook.Name</span><br><span class="line">pa = ThisWorkbook.Path</span><br><span class="line"><span class="keyword">With</span> OLMail</span><br><span class="line">　　.<span class="keyword">To</span> = <span class="string">&quot;qqqqqqqqqqqq@qq.com;asasasas@qq.com&quot;</span> <span class="comment">&#x27;收件人</span></span><br><span class="line">　　.CC = <span class="string">&quot;&quot;</span> <span class="comment">&#x27;抄送人</span></span><br><span class="line">　　.BCC = <span class="string">&quot;&quot;</span> <span class="comment">&#x27;密送人</span></span><br><span class="line">　　.Subject = na <span class="comment">&#x27;邮件标题</span></span><br><span class="line">　　.Body = <span class="string">&quot;邮件仅为测试&quot;</span> <span class="comment">&#x27;邮件正文</span></span><br><span class="line">　　.Attachments.Add (pa &amp; <span class="string">&quot;\&quot;</span> &amp; na) <span class="comment">&#x27;附件</span></span><br><span class="line">    pdy = Msgbox(<span class="string">&quot;是否田间邮件正文内容？&quot;</span>, vbYesNo) <span class="comment">&#x27;判断是不是直接发送邮件</span></span><br><span class="line">    <span class="keyword">if</span> pdy = vbNo <span class="keyword">Then</span></span><br><span class="line">        .send <span class="comment">&#x27;直接发送 display</span></span><br><span class="line">    <span class="keyword">Else</span></span><br><span class="line">        .display</span><br><span class="line">    endif</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br></pre></td></tr></table></figure><hr><h3 id="通过百度计算两城市间公里数"><a href="#通过百度计算两城市间公里数" class="headerlink" title="通过百度计算两城市间公里数"></a>通过百度计算两城市间公里数</h3><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> test()</span><br><span class="line"><span class="keyword">Set</span> JS = CreateObject(<span class="string">&quot;msscriptcontrol.scriptcontrol&quot;</span>)</span><br><span class="line">JS.Language = <span class="string">&quot;JavaScript&quot;</span></span><br><span class="line"><span class="keyword">With</span> CreateObject(<span class="string">&quot;WinHttp.WinHttpRequest.5.1&quot;</span>)</span><br><span class="line"><span class="keyword">For</span> i = <span class="number">2</span> <span class="keyword">To</span> Sheet1.Range(<span class="string">&quot;a65536&quot;</span>).<span class="keyword">End</span>(xlUp).Row</span><br><span class="line">s1 = JS.Eval(<span class="string">&quot;encodeURIComponent(&#x27;&quot;</span> &amp; Sheet1.Cells(i, <span class="number">1</span>) &amp; <span class="string">&quot;&#x27;);&quot;</span>)</span><br><span class="line">s2 = JS.Eval(<span class="string">&quot;encodeURIComponent(&#x27;&quot;</span> &amp; Sheet1.Cells(i, <span class="number">3</span>) &amp; <span class="string">&quot;&#x27;);&quot;</span>)</span><br><span class="line">.Open <span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://map.baidu.com/?newmap=1&amp;reqflag=pcmap&amp;biz=1&amp;qt=nav&amp;c=1&amp;sn=2$$$$$$&quot;</span> &amp; s1 &amp; <span class="string">&quot;$$0$$$$&amp;en=2$$$$$$&quot;</span> &amp; s2 &amp; <span class="string">&quot;$$0$$$$&quot;</span>, <span class="literal">False</span></span><br><span class="line">.Send</span><br><span class="line">tt = .responsetext</span><br><span class="line">Sheet1.Cells(i, <span class="number">6</span>) = Val(Split(Split(tt, <span class="string">&quot;:&quot;</span>)(<span class="number">2</span>), <span class="string">&quot;,&quot;</span>)(<span class="number">0</span>)) / <span class="number">1000</span></span><br><span class="line"><span class="keyword">Next</span> i</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Transformer</title>
      <link href="/undefined/e0d2147a.html"/>
      <url>/undefined/e0d2147a.html</url>
      
        <content type="html"><![CDATA[<h2 id="Transformer构架"><a href="#Transformer构架" class="headerlink" title="Transformer构架"></a>Transformer构架</h2><p><img src="https://pic1.zhimg.com/v2-4b53b731a961ee467928619d14a5fd44_r.jpg" alt="架构图"></p><h3 id="翻译词语"><a href="#翻译词语" class="headerlink" title="翻译词语"></a>翻译词语</h3><ul><li>input embedding：源文本嵌入层</li><li>output embedding：目标文本嵌入层</li><li>positional encoding：位置编码器</li><li>linear：线性层</li><li>add &amp; norm：规范化层</li><li>multi-head attention：多头自注意力</li><li>feed forward：前馈全连接</li><li>masked：掩码</li></ul><h3 id="四部分"><a href="#四部分" class="headerlink" title="四部分"></a>四部分</h3><ul><li>输入部分<ul><li>inputs：源文本嵌入层及其位置编码器</li><li>outputs：目标文本嵌入层及位置其位置编码器</li></ul></li><li>编码器部分<ul><li>N个编码器堆叠</li><li>每个编码器有两个子层<ul><li>第一个子层结构：一个多头自注意力子层、规范化层、一个残差连接</li><li>第二个子层结构：一个前馈全连接子层、规范化层、一个残差连接</li></ul></li></ul></li><li>解码器部分<ul><li>N个解码器堆叠</li><li>每个解码器有三个子层<ul><li>第一个子层结构：一个多头自注意力子层、规范化层、一个残差连接</li><li>第二个子层结构：一个多头注意力子层、规范化层、一个残差连接</li><li>第三个子层结构：一个前馈全连接子层、规范化层、一个残差连接</li></ul></li></ul></li><li>输出部分<ul><li>linear：线性层</li><li>softmax：softmax层</li></ul></li></ul><hr><h2 id="输入部分"><a href="#输入部分" class="headerlink" title="输入部分"></a>输入部分</h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>文本嵌入层的作用：<ul><li>将文本中词汇的数字表示转变为向量表示,在高纬度空间捕捉词汇间的关系</li></ul></li><li>位置编码器：<ul><li>将词汇位置不同可能会产生不同语义的信息加入到词嵌入张量中</li><li>dropout：置零比率</li></ul></li></ul><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">from</span> torch.autograd <span class="keyword">import</span> Variable</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入部分</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文本嵌入层</span></span><br><span class="line">embedding = nn.Embedding(<span class="number">10</span>,<span class="number">3</span>)</span><br><span class="line">input1 = torch.LongTensor([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>],[<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">9</span>]])</span><br><span class="line"><span class="built_in">print</span>(embedding(input1))</span><br><span class="line"></span><br><span class="line"><span class="comment"># padding_idx参数</span></span><br><span class="line">embedding = nn.Embedding(<span class="number">10</span>, <span class="number">3</span>, padding_idx=<span class="number">0</span>)</span><br><span class="line">input1 = torch.LongTensor([[<span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">5</span>]])</span><br><span class="line"><span class="built_in">print</span>(embedding(input1))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建Embedding类实现文本嵌入层</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Embeddings</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, d_model, vocab</span>):</span><br><span class="line">        <span class="comment"># d_model: 词嵌入的维度</span></span><br><span class="line">        <span class="comment"># vocab: 词表的大小</span></span><br><span class="line">        <span class="built_in">super</span>(Embeddings, self).__init__()</span><br><span class="line">        <span class="comment"># 定义Embedding层</span></span><br><span class="line">        self.lut = nn.Embedding(vocab, d_model)</span><br><span class="line">        <span class="comment"># 将参数传入类中</span></span><br><span class="line">        self.d_model = d_model</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="comment"># x: 代表输入进模型的文本通过词汇映射后的数字张量</span></span><br><span class="line">        <span class="keyword">return</span> self.lut(x) * math.sqrt(self.d_model)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化</span></span><br><span class="line">d_model = <span class="number">512</span></span><br><span class="line">vocab = <span class="number">1000</span></span><br><span class="line">x = Variable(torch.LongTensor([[<span class="number">100</span>, <span class="number">2</span>, <span class="number">421</span>, <span class="number">508</span>], [<span class="number">491</span>, <span class="number">998</span>, <span class="number">1</span>, <span class="number">221</span>]]))</span><br><span class="line">emb = Embeddings(d_model, vocab)</span><br><span class="line">embr = emb(x)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;ember:&quot;</span>, embr)</span><br><span class="line"><span class="built_in">print</span>(embr.shape)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 演示Dropout</span></span><br><span class="line">m = nn.Dropout(p=<span class="number">0.2</span>)</span><br><span class="line">input1 = torch.randn(<span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">output = m(input1)</span><br><span class="line"><span class="built_in">print</span>(output)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 演示unsqueeze</span></span><br><span class="line">x = torch.tensor([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">y = torch.unsqueeze(x, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(y)</span><br><span class="line">z = torch.unsqueeze(x, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(z)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建位置编码器的类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PositionalEncoding</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, d_model, dropout, max_len=<span class="number">5000</span></span>):</span><br><span class="line">        <span class="comment"># d_model: 代表词嵌入的维度</span></span><br><span class="line">        <span class="comment"># dropout: 代表Dropout层的置零比率</span></span><br><span class="line">        <span class="built_in">super</span>(PositionalEncoding, self).__init__()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 实例化Dropout层</span></span><br><span class="line">        self.dropout = nn.Dropout(p=dropout)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 初始化一个位置编码矩阵，大小是max_len * d_model</span></span><br><span class="line">        pe = torch.zeros(max_len, d_model)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 初始化一个绝对位置矩阵， max_len * 1</span></span><br><span class="line">        position = torch.arange(<span class="number">0</span>, max_len).unsqueeze(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 定义一个变化矩阵div_term,跳跃式的初始化</span></span><br><span class="line">        div_term = torch.exp(torch.arange(<span class="number">0</span>, d_model, <span class="number">2</span>) * -(math.log(<span class="number">10000.0</span>)))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 将前面定义的变化矩阵进行奇数，偶数的分别赋值</span></span><br><span class="line">        pe[:, <span class="number">0</span>::<span class="number">2</span>] = torch.sin(position * div_term)</span><br><span class="line">        pe[:, <span class="number">1</span>::<span class="number">2</span>] = torch.cos(position * div_term)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 将二维张良扩充成三维张量</span></span><br><span class="line">        pe = pe.unsqueeze(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 将位置编码矩阵注册成模型的buffer， 这个buffer不是模型中的参数，不跟随优化器同步更新</span></span><br><span class="line">        <span class="comment"># 注册成buffer后我们就可以在模型保存后重新加载的时候，将这个位置编码器和模型参数一同加载进来</span></span><br><span class="line">        self.register_buffer(<span class="string">&#x27;pe&#x27;</span>, pe)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="comment"># x: 代表问呗序列的词嵌入表示</span></span><br><span class="line">        <span class="comment"># 首先明确pe的编码太长了。将第二个维度，也就是max_len对应的那个维度缩小成x句子的长度</span></span><br><span class="line">        x = x + Variable(self.pe[:, :x.size(<span class="number">1</span>)], requires_grad=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">return</span> self.dropout(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化</span></span><br><span class="line">d_model = <span class="number">512</span></span><br><span class="line">dropout = <span class="number">0.1</span></span><br><span class="line">max_len = <span class="number">60</span></span><br><span class="line"></span><br><span class="line">x = embr</span><br><span class="line">pe = PositionalEncoding(d_model, dropout, max_len)</span><br><span class="line">pe_result = pe(x)</span><br><span class="line"><span class="built_in">print</span>(pe_result)</span><br><span class="line"><span class="comment"># print(pe_result.shape)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制词汇向量中特征的分布曲线</span></span><br><span class="line"><span class="comment"># 第一步设置一个画布</span></span><br><span class="line">plt.figure(figsize=(<span class="number">15</span>, <span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化PositionalEncoding类对象，词嵌入维度给20，置零比率设置为0</span></span><br><span class="line">pe = PositionalEncoding(<span class="number">20</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 向pe中传入一个全零初始化的x，相当于展示pe</span></span><br><span class="line">y = pe(Variable(torch.zeros(<span class="number">1</span>, <span class="number">100</span>, <span class="number">20</span>)))</span><br><span class="line">plt.plot(np.arange(<span class="number">100</span>), y[<span class="number">0</span>, :, <span class="number">4</span>:<span class="number">8</span>].data.numpy())</span><br><span class="line">plt.legend([<span class="string">&quot;dim %d&quot;</span>%p <span class="keyword">for</span> p <span class="keyword">in</span> [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><hr><h2 id="编码器部分"><a href="#编码器部分" class="headerlink" title="编码器部分"></a>编码器部分</h2><h3 id="掩码张量"><a href="#掩码张量" class="headerlink" title="掩码张量"></a>掩码张量</h3><h4 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h4><ul><li>代表位置被遮掩或者不被遮掩，尺寸不定，一般只有1和0的元素</li><li>作用：<ul><li>让另外一个张量中的一些数值被遮掩</li><li>attention张量中可能有未来的信息，因需要一层一层计算所以把未来的信息进行遮掩</li></ul></li></ul><h4 id="正文-1"><a href="#正文-1" class="headerlink" title="正文"></a>正文</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># triu 对下三角进行赋0</span></span><br><span class="line"><span class="built_in">print</span>(np.triu([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],[<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]], k=-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(np.triu([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],[<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]], k=<span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span>(np.triu([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],[<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]], k=<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建掩码张量的函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">subsequent_mask</span>(<span class="params">size</span>):</span><br><span class="line">    <span class="comment"># size: 代表掩码张量后两个维度，形成一个方阵</span></span><br><span class="line">    attn_shape = (<span class="number">1</span>, size, size)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用np.ones()先构建一个全1的张量，然后利用np.triu()形成上三角矩阵</span></span><br><span class="line">    subsequent_mask = np.triu(np.ones(attn_shape), k=<span class="number">1</span>).astype(<span class="string">&#x27;uint8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使得这个三角矩阵反转</span></span><br><span class="line">    <span class="keyword">return</span> torch.from_numpy(<span class="number">1</span> - subsequent_mask)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化</span></span><br><span class="line">size = <span class="number">5</span></span><br><span class="line">sm = subsequent_mask(size)</span><br><span class="line"><span class="comment"># print(&quot;sm:&quot;, sm)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可视化</span></span><br><span class="line">plt.figure(figsize=(<span class="number">5</span>, <span class="number">5</span>))</span><br><span class="line">plt.imshow(subsequent_mask(<span class="number">20</span>)[<span class="number">0</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="注意力机制"><a href="#注意力机制" class="headerlink" title="注意力机制"></a>注意力机制</h3><h4 id="解释-1"><a href="#解释-1" class="headerlink" title="解释"></a>解释</h4><ul><li>不是从头到尾的观察后进行判断，而是用最有辨识度部分做出快速判断（允许错误）</li><li>计算规则：<ul><li>需要三个指定的输入Q（query），K（key），V（value），然后通过公式得到注意力的计算结果，这个结果代表query在key和value作用下的表示，计算的规则有很多中</li><li>比喻解释：<ul><li>Q是一段准备被概括的文本；K是给出的提示；V是大脑中的对提示K的延申</li><li>当Q&#x3D;K&#x3D;V时，称作自注意力机制</li></ul></li></ul></li></ul><h4 id="正文-2"><a href="#正文-2" class="headerlink" title="正文"></a>正文</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意力</span></span><br><span class="line"><span class="comment"># # 分解函数</span></span><br><span class="line"><span class="comment"># x = Variable(torch.randn(5, 5))</span></span><br><span class="line"><span class="comment"># print(x)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mask = Variable(torch.zeros(5, 5))</span></span><br><span class="line"><span class="comment"># print(mask)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># y = x.masked_fill(mask == 0, -1e9)</span></span><br><span class="line"><span class="comment"># print(y)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建attention函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">attention</span>(<span class="params">query, key, value, mask=<span class="literal">None</span>, dropout=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="comment"># query, key, value: 代表注意力的三个输入张量</span></span><br><span class="line">    <span class="comment"># mask： 掩码张量</span></span><br><span class="line">    <span class="comment"># dropout： 传入dropout实例化对象</span></span><br><span class="line">    <span class="comment"># 首先将query的最后一个维度提取出来，代表的是词嵌入的维度</span></span><br><span class="line">    d_k = query.size(-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 按照注意力计算公式，就将query和key的转置进行矩阵乘法，然后除以缩放系数</span></span><br><span class="line">    scores = torch.matmul(query, key.transpose(-<span class="number">2</span>, -<span class="number">1</span>)) / math.sqrt(d_k)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断是否使用掩码张量</span></span><br><span class="line">    <span class="keyword">if</span> mask <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="comment"># 利用masked_fill方法，将掩码张量和0进行位置的意义比较，如果等于0，替换成一个非常小的数</span></span><br><span class="line">        scores = scores.masked_fill(mask == <span class="number">0</span>, -<span class="number">1e9</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对scores的最后一个维度上进行softmax操作</span></span><br><span class="line">    p_attn = F.softmax(scores, dim=-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断是否使用dropout</span></span><br><span class="line">    <span class="keyword">if</span> dropout <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        p_attn = dropout(p_attn)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 最后一步完成p_attn和value张量的惩罚，并返回query注意力表示</span></span><br><span class="line">    <span class="keyword">return</span> torch.matmul(p_attn, value), p_attn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化</span></span><br><span class="line">query = key = value = pe_result</span><br><span class="line">attn, p_attn = attention(query, key, value)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;attn:&#x27;</span>, attn)</span><br><span class="line"><span class="built_in">print</span>(attn.shape)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;p_attn:&#x27;</span>, p_attn)</span><br><span class="line"><span class="built_in">print</span>(p_attn.shape)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="多头注意力机制"><a href="#多头注意力机制" class="headerlink" title="多头注意力机制"></a>多头注意力机制</h3><h4 id="解释-2"><a href="#解释-2" class="headerlink" title="解释"></a>解释</h4><hr><h2 id="解码器部分"><a href="#解码器部分" class="headerlink" title="解码器部分"></a>解码器部分</h2><hr><h2 id="输出部分"><a href="#输出部分" class="headerlink" title="输出部分"></a>输出部分</h2><hr>]]></content>
      
      
      <categories>
          
          <category> 数据分析-基础 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/js/readPercent.js"/>
      <url>/js/readPercent.js</url>
      
        <content type="html"><![CDATA[window.onscroll = percent;// 执行函数// 页面百分比function percent() {    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度        result = Math.round(a / b * 100), // 计算百分比        up = document.querySelector("#go-up") // 获取按钮    if (result <= 95) {        up.childNodes[0].style.display = 'none'        up.childNodes[1].style.display = 'block'        up.childNodes[1].innerHTML = result;    } else {        up.childNodes[1].style.display = 'none'        up.childNodes[0].style.display = 'block'    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/readPercent.css"/>
      <url>/css/readPercent.css</url>
      
        <content type="html"><![CDATA[/* 返回顶部 */button#go-up #percent {    display: none;    font-weight: bold;    font-size: 15px !important;}button#go-up span {    font-size: 12px!important;    margin-right: -1px;}/* 鼠标滑动到按钮上时显示返回顶部图标 */button#go-up:hover i {    display: block !important;}button#go-up:hover #percent {    display: none !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }/* 翻页按钮居中 */#pagination {    width: 100%;    margin: auto;  }/* 一级菜单居中 */#nav .menus_items {    position: absolute !important;    width: fit-content !important;    left: 50% !important;    transform: translateX(-50%) !important;  }  /* 子菜单横向展示 */  #nav .menus_items .menus_item:hover .menus_item_child {    display: flex !important;  }  /* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */  .menus_items .menus_item:nth-child(2) .menus_item_child {    left: -125px;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友情链接</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
